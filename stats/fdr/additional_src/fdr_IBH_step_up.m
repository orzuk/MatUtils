% FDR procedure with our improved Benjamini-Hochbeg step-up method
% for the case when the p values are based on statistically
% independent tests. input: P is a matrix of sortdet p-values (each row is a vector), q is a scalar which
% control the false discovery rate. output: F vector contain the number of
% hypotheses that pass the procedure. Improve Benjamini Hochberg 1995
function F=fdr_IBH_step_up(P,q)

[n,m]=size(P);
if n>m; P=P';m=n;end
psor=sort(P);
m_C_s=1e5 *[     0.001000000000000   0.000010306035633   0.000350000000000
   0.002000000000000   0.000010199148511   0.000550000000000
   0.003000000000000   0.000010156707816   0.000720000000000
   0.004000000000000   0.000010132670482   0.000860000000000
   0.005000000000000   0.000010117091093   0.000980000000000
   0.006000000000000   0.000010105538438   0.001090000000000
   0.007000000000000   0.000010096875092   0.001190000000000
   0.008000000000000   0.000010090004408   0.001290000000000
   0.009000000000000   0.000010084411050   0.001380000000000
   0.010000000000000   0.000010079681966   0.001470000000000
   0.020000000000000   0.000010054904854   0.002170000000000
   0.030000000000000   0.000010044257282   0.002720000000000
   0.040000000000000   0.000010038076350   0.003180000000000
   0.050000000000000   0.000010033856638   0.003590000000000
   0.060000000000000   0.000010030847440   0.003960000000000
   0.070000000000000   0.000010028436400   0.004300000000000
   0.080000000000000   0.000010026535868   0.004620000000000
   0.090000000000000   0.000010025022004   0.004910000000000
   0.100000000000000   0.000010023656804   0.005210000000000
   0.150000000000000   0.000010019218320   0.006450000000000
   0.200000000000000   0.000010016616056   0.007500000000000
   0.250000000000000   0.000010014818536   0.008430000000000
   0.300000000000000   0.000010013492425   0.009280000000000
   0.400000000000000   0.000010011679484   0.010770000000000
   0.500000000000000   0.000010010408058   0.012110000000000
   0.600000000000000   0.000010009486880   0.013320000000000
   0.700000000000000   0.000010008794243   0.014390000000000
   0.800000000000000   0.000010008212513   0.015430000000000
   0.900000000000000   0.000010007735493   0.016410000000000
   1.000000000000000   0.000010007339726   0.017310000000000];
C=interp1(m_C_s(:,1),m_C_s(:,2),m,'spline');
s=interp1(m_C_s(:,1),m_C_s(:,3),m,'spline');
m0_hat=C*min(m,max(s,2*sum(P)));%the estimator
F=zeros(n,1);
fdr_line=[1:m]*q/m;


in_fdr=find((psor-fdr_line*m/m0_hat)<=0,1,'last');
if in_fdr>0
    F=find(P<=psor(in_fdr));    
elseif isempty(in_fdr)==1
    F=[];
end

